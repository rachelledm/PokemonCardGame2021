import sqlite3, sys
import database as db
import gameComponents as game
import os


try:
  while True:
    round = 1
    game.playBGMusic()
    startOpt = game.introFunct()
    
    if startOpt == False:
      print("Enter database accesing code here")
      continue

    #This is where the player chooses the amount of pokemon they wish to play with
    numPoke = game.enterNumber("How many pokemon would you like to play with? ", 6)
    
    #This is where a function that assigns random pokemon will occur. These are lists nested lists of each poke
    plTotalPoke = randomPokeAssign(numPoke)
    cpuTotalPoke = randomPokeAssign(numPoke) 
    
    #Starts the player with a pokemon
    plNewPoke = True
    cpuNewPoke = True
    
    #Assigns variables for number of pokemon left
    cpuPokeLeft = numPoke
    plPokeLeft = numPoke
    input()
    try:
      while True:
        input("enter an input to start round {}".format(roundNum))

        #round starts at 1 as is only used to show next round number
        round += 1
        if plNewPoke == True:
          plHealth = 10
          pokeChoice = selectPoke(plTotalPoke)
          plPoke = usePoke(plTotalPoke, pokeChoice)
        if cpuNewPoke == True:
          cpuHealth = 10
          cpuPoke = usePoke(cpuTotalPoke, rand.int(0, cpuPokeLeft))#add 1 to pokeleft for chosing
        game.roundStart(plPoke, plHealth, cpuPoke, cpuHealth) 
        plAttack = game.chooseAttack(plPoke) 
        cpuHealth = game.removeHP(cpuPoke[0], cpuHealth, plAttack) 
        if cpuHealth <= 0:
          #prints fainted pokemon name
          game.pokeFaint(cpuPoke)
          #removes fainted pokemon from available pokemon
          cpuTotalPoke.remove(cpuPoke) 
          if len(cpuTotalPoke) == 0: #no pokemon left
            #game ends, player is winner
            game.gameOver("player")
            game.stopMusic()
            break
          else:
            cpuNewPoke == True
            continue #This makes it so the opponent can't take their turn if their pokemon faints
        cpuAttack = game.chooseAttack(cpuPoke) #choses a random attack
        plHealth = game.removeHP(plPoke[0], plHealth, cpuAttack)
        if plHealth <= 0:
          game.pokeFaint(plPoke)
          #removes fainted pokemon from available pokemon
          plTotalPoke.remove(plPoke)
          if len(plTotalPoke) == o: #no pokemon left
            #game ends, CPU wins
            game.gameOver("CPU")
            game.stopMusic()
            break
          else:
            plNewPoke == True
            continue
    #abandons game if cntrl + c
    except KeyboardInterrupt:
      print("\n\n\u001b[33mReturning to main menu...\u001b[0m\n")
      #I don't have to reassign any of the variables
#quits if cntrl + c is pressed
except KeyboardInterrupt:
  print("\n\n\u001b[33mThis program will now close\nThank you for playing Pokecard Battle\n")
  exit()

